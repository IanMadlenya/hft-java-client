/*
 * HighFrequencyTrading API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.lykke.hft.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.lykke.hft.model.IssueIndicator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;

/**
 * IsAliveResponse
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-11-06T23:34:32.567+02:00")
public class IsAliveResponse {
  @JsonProperty("Version")
  private String version = null;

  @JsonProperty("Env")
  private String env = null;

  @JsonProperty("IsDebug")
  private Boolean isDebug = null;

  @JsonProperty("IssueIndicators")
  private List<IssueIndicator> issueIndicators = null;

  public IsAliveResponse version(String version) {
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @ApiModelProperty(value = "")
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }

  public IsAliveResponse env(String env) {
    this.env = env;
    return this;
  }

   /**
   * Get env
   * @return env
  **/
  @ApiModelProperty(value = "")
  public String getEnv() {
    return env;
  }

  public void setEnv(String env) {
    this.env = env;
  }

  public IsAliveResponse isDebug(Boolean isDebug) {
    this.isDebug = isDebug;
    return this;
  }

   /**
   * Get isDebug
   * @return isDebug
  **/
  @ApiModelProperty(required = true, value = "")
  public Boolean getIsDebug() {
    return isDebug;
  }

  public void setIsDebug(Boolean isDebug) {
    this.isDebug = isDebug;
  }

  public IsAliveResponse issueIndicators(List<IssueIndicator> issueIndicators) {
    this.issueIndicators = issueIndicators;
    return this;
  }

  public IsAliveResponse addIssueIndicatorsItem(IssueIndicator issueIndicatorsItem) {
    if (this.issueIndicators == null) {
      this.issueIndicators = new ArrayList<IssueIndicator>();
    }
    this.issueIndicators.add(issueIndicatorsItem);
    return this;
  }

   /**
   * Get issueIndicators
   * @return issueIndicators
  **/
  @ApiModelProperty(value = "")
  public List<IssueIndicator> getIssueIndicators() {
    return issueIndicators;
  }

  public void setIssueIndicators(List<IssueIndicator> issueIndicators) {
    this.issueIndicators = issueIndicators;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IsAliveResponse isAliveResponse = (IsAliveResponse) o;
    return Objects.equals(this.version, isAliveResponse.version) &&
        Objects.equals(this.env, isAliveResponse.env) &&
        Objects.equals(this.isDebug, isAliveResponse.isDebug) &&
        Objects.equals(this.issueIndicators, isAliveResponse.issueIndicators);
  }

  @Override
  public int hashCode() {
    return Objects.hash(version, env, isDebug, issueIndicators);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IsAliveResponse {\n");
    
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    env: ").append(toIndentedString(env)).append("\n");
    sb.append("    isDebug: ").append(toIndentedString(isDebug)).append("\n");
    sb.append("    issueIndicators: ").append(toIndentedString(issueIndicators)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

