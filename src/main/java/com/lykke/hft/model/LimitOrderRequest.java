/*
 * HighFrequencyTrading API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.lykke.hft.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * LimitOrderRequest
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-11-06T23:34:32.567+02:00")
public class LimitOrderRequest {
  @JsonProperty("AssetPairId")
  private String assetPairId = null;

  /**
   * Gets or Sets orderAction
   */
  public enum OrderActionEnum {
    BUY("Buy"),
    
    SELL("Sell");

    private String value;

    OrderActionEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static OrderActionEnum fromValue(String text) {
      for (OrderActionEnum b : OrderActionEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("OrderAction")
  private OrderActionEnum orderAction = null;

  @JsonProperty("Volume")
  private Double volume = null;

  @JsonProperty("Price")
  private Double price = null;

  public LimitOrderRequest assetPairId(String assetPairId) {
    this.assetPairId = assetPairId;
    return this;
  }

   /**
   * Get assetPairId
   * @return assetPairId
  **/
  @ApiModelProperty(value = "")
  public String getAssetPairId() {
    return assetPairId;
  }

  public void setAssetPairId(String assetPairId) {
    this.assetPairId = assetPairId;
  }

  public LimitOrderRequest orderAction(OrderActionEnum orderAction) {
    this.orderAction = orderAction;
    return this;
  }

   /**
   * Get orderAction
   * @return orderAction
  **/
  @ApiModelProperty(required = true, value = "")
  public OrderActionEnum getOrderAction() {
    return orderAction;
  }

  public void setOrderAction(OrderActionEnum orderAction) {
    this.orderAction = orderAction;
  }

  public LimitOrderRequest volume(Double volume) {
    this.volume = volume;
    return this;
  }

   /**
   * Get volume
   * @return volume
  **/
  @ApiModelProperty(required = true, value = "")
  public Double getVolume() {
    return volume;
  }

  public void setVolume(Double volume) {
    this.volume = volume;
  }

  public LimitOrderRequest price(Double price) {
    this.price = price;
    return this;
  }

   /**
   * Get price
   * @return price
  **/
  @ApiModelProperty(required = true, value = "")
  public Double getPrice() {
    return price;
  }

  public void setPrice(Double price) {
    this.price = price;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LimitOrderRequest limitOrderRequest = (LimitOrderRequest) o;
    return Objects.equals(this.assetPairId, limitOrderRequest.assetPairId) &&
        Objects.equals(this.orderAction, limitOrderRequest.orderAction) &&
        Objects.equals(this.volume, limitOrderRequest.volume) &&
        Objects.equals(this.price, limitOrderRequest.price);
  }

  @Override
  public int hashCode() {
    return Objects.hash(assetPairId, orderAction, volume, price);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LimitOrderRequest {\n");
    
    sb.append("    assetPairId: ").append(toIndentedString(assetPairId)).append("\n");
    sb.append("    orderAction: ").append(toIndentedString(orderAction)).append("\n");
    sb.append("    volume: ").append(toIndentedString(volume)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

